using FlaUI.Core.Input;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using MTNBaseClasses.BaseClasses.MasterTerminal;
using MTNForms.Controls;
using MTNForms.FormObjects.General_Functions;
using MTNForms.FormObjects.Misc;
using MTNForms.FormObjects.System_Items.System_Ops;
using MTNUtilityClasses.Classes;
using System;
using System.IO;
using DataObjects.LogInOutBO;
using MTNForms.FormObjects;
using MTNGlobal;
using MTNGlobal.EnumsStructs;

namespace MTNAutomationTests.TestCases.Master_Terminal.Opsview_Tests
{
    [TestClass, TestCategory(TestCategories.MTN)]
    public class TestCase50273 : MTNBase
    {

        [ClassInitialize]
        public static void ClassInitialize(TestContext testContext) => BaseClassInitialize_New(testContext);

        [TestInitialize]
        public new void TestInitialize() {}
        
        [TestCleanup]
        public new void TestCleanup() => base.TestCleanup();

        void MTNInitialize()
        {
            userName = "MTN-OPS";
            LogInto<MTNLogInOutBO>(userName);
        }


        [TestMethod]
        public void UpdateTerminal()
        {
            MTNInitialize();
            
            // Navigate to System Admin | Terminal table
            FormObjectBase.NavigationMenuSelection(@"System Ops| System Admin");
            SystemAdminForm systemAdminForm = new SystemAdminForm(@"System Administration");
            //MTNControlBase.SetValue(systemAdminForm.cmbTable, @"Terminal");
            systemAdminForm.cmbTable.SetValue(@"Terminal");

            // Find MTNQ terminal
            //MTNControlBase.FindClickRowInTable(systemAdminForm.tblAdministrationItems, @"Code^MTNQ~Name^MTNQ", clickType: ClickType.None, searchType: SearchType.Exact);
            systemAdminForm.TblAdministrationItemsRH16A.FindClickRow(["Code^MTNQ~Name^MTNQ"], clickType: ClickType.None, searchType: SearchType.Exact);

            // Click Edit button
            systemAdminForm.DoEdit();

            // Click Defaults tab
            systemAdminForm.GetGenericTabAndTable(@"Defaults");

            // Change Availability Grade to 4
            MTNControlBase.SetValueInEditTable(systemAdminForm.tblGeneric, @"Availability Grade", @"4", EditRowDataType.Text);

            // Click Save button
            systemAdminForm.DoSave();
           
            // Open General Functions | Activity History 
            FormObjectBase.NavigationMenuSelection(@"General Functions | Activity History", forceReset: true);

            // Click Find button on Searcher
            Activity_History_Form activityHistoryForm = new Activity_History_Form(@"Activity History MTNQ");
            //activityHistoryForm.btnFind.DoClick();
            activityHistoryForm.DoFind();

            // Click Terminal Activity button
            //activityHistoryForm.btnTerminalActivity.DoClick();
            activityHistoryForm.DoTerminalActivity();

            // Find and double Click the row to check the message generated by opsview BGP
            //activityHistoryForm.GetInformationTable();
            // MTNControlBase.FindClickRowInTable(activityHistoryForm.tblInformation, @"Terminal^System~Type^External Interface~Status^Sent - Timed Out~User^ADMIN~Interface Name^opsview", ClickType.DoubleClick);
            activityHistoryForm.TblInformation.FindClickRow(["Terminal^System~Type^External Interface~Status^Sent - Timed Out~User^ADMIN~Interface Name^opsview"], ClickType.DoubleClick);

            // Export the extra details to a file
            Activity_History_Extra_Detail_Form extraDetailsForm = new Activity_History_Extra_Detail_Form(@"opsview POST testurl.org was sent");
            extraDetailsForm.ClickExportRequest();
            string filePath = extraDetailsForm.GetFullPath(@"50273_File1");
            Miscellaneous.TypeFileNameInWindowsExplorer(filePath);
            Wait.UntilInputIsProcessed(TimeSpan.FromMilliseconds(1500));

            // Remove double quotes from the extra details message file
            string messageToCheck = File.ReadAllText(filePath).Replace("\"", "");
            File.WriteAllText(filePath, messageToCheck);

            // these are the strings we want to check in the extra details message
            string[] stringsToFind =
            {
                 @"tableName: argo_facility",
                 @"id: MTNQ",
                 @"name: MTNQ",
                 @"time_zone: New Zealand Standard Time",
                 @"facilityId: MTNQ",
                 @"updateAction: U",
                 @"updateType: TERMINAL"
            };

            // create a file that contains stringsToFind in it 
            string stringsToFindFile = extraDetailsForm.GetFullPath(@"50273_File2");
            File.WriteAllLines(stringsToFindFile, stringsToFind);


            // check the message content is as expected
            extraDetailsForm.ValidateExtraDetailsMessage(stringsToFindFile, messageToCheck);
        }
    }
}
