using FlaUI.Core.Input;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using MTNBaseClasses.BaseClasses.MasterTerminal;
using MTNForms.Controls;
using MTNForms.FormObjects.General_Functions;
using MTNForms.FormObjects.Misc;
using MTNForms.FormObjects.System_Items.System_Ops;
using MTNUtilityClasses.Classes;
using System;
using DataObjects.LogInOutBO;
using MTNForms.FormObjects;
using MTNGlobal;
using MTNGlobal.EnumsStructs;

namespace MTNAutomationTests.TestCases.Master_Terminal.Opsview_Tests
{
    [TestClass, TestCategory(TestCategories.MTN)]
    public class TestCase50282 : MTNBase
    {

        [ClassInitialize]
        public static void ClassInitialize(TestContext testContext) => BaseClassInitialize_New(testContext);

        [TestInitialize]
        public new void TestInitialize() {}
       
        [TestCleanup]
        public new void TestCleanup() => base.TestCleanup();

        void MTNInitialize()
        {
            userName = "MTN-OPS";
            LogInto<MTNLogInOutBO>(userName);
            
            CallJadeScriptToRun(TestContext, @"resetData_50282");
        }
        

        [TestMethod]
        public void AddUpdateOperator()
        {
            MTNInitialize();
            
            // Navigate to System Admin | Terminal table
            FormObjectBase.NavigationMenuSelection(@"System Ops| System Admin");
             SystemAdminForm systemAdminForm1 = new SystemAdminForm(@"System Administration");
             //MTNControlBase.SetValue(systemAdminForm1.cmbTable, @"Operators");
            systemAdminForm1.cmbTable.SetValue(@"Operators");

            // Click New button
            //systemAdminForm1.btnNew.DoClick();
            systemAdminForm1.DoNew();

            // Enter Code - AOPS, Description - Opsview Operator
            MTNControlBase.SetValueInEditTable(systemAdminForm1.tblDetails, @"Code", @"AOPS");
            MTNControlBase.SetValueInEditTable(systemAdminForm1.tblDetails, @"Description", @"Opsview Operator");

              // Click the Save button
              systemAdminForm1.DoSave();

              // close the form
              systemAdminForm1.CloseForm();

              // Navigate to System Admin | Terminal table
              FormObjectBase.NavigationMenuSelection(@"System Ops| System Admin", forceReset: true);
              SystemAdminForm systemAdminForm = new SystemAdminForm(@"System Administration");
              //MTNControlBase.SetValue(systemAdminForm.cmbTable, @"Operators");
            systemAdminForm.cmbTable.SetValue(@"Operators");


              // Find AOPS operator
              //int rowHeight = 2200;
              //systemAdminForm.ScrollTableDown(systemAdminForm.tblAdministrationItems, 50, ref rowHeight);

            //DoRequestedClick(systemAdminForm.tblAdministrationItems, ClickType.LeftClick, 50);
            //Wait.UntilInputIsProcessed(TimeSpan.FromMilliseconds(1500));
            //MTNControlBase.FindClickRowInTable(systemAdminForm.tblAdministrationItems, @"Code^AOPS~Description^Opsview Operator", clickType: ClickType.DoubleClick, searchType: SearchType.Exact);
            systemAdminForm.TblAdministrationItemsRH16A.FindClickRow( ["Code^AOPS~Description^Opsview Operator"], clickType: ClickType.DoubleClick, searchType: SearchType.Exact);

              Wait.UntilInputIsProcessed(TimeSpan.FromMilliseconds(1500));

              // Click Edit button
              systemAdminForm.DoEdit();

              // Change Description 
               MTNControlBase.SetValueInEditTable(systemAdminForm.tblDetails, @"Description", @"Opsview Operator updated");

              // Click Save button
              systemAdminForm.DoSave();

              // Open General Functions | Activity History 
              FormObjectBase.NavigationMenuSelection(@"General Functions | Activity History", forceReset: true);

              // Click Find button on Searcher
              Activity_History_Form activityHistoryForm = new Activity_History_Form(@"Activity History MTNQ");
              //activityHistoryForm.btnFind.DoClick();
              activityHistoryForm.DoFind();

              // Click Terminal Activity button
              //activityHistoryForm.btnTerminalActivity.DoClick();
              activityHistoryForm.DoTerminalActivity();

              // Find and double Click the row to check the message generated by opsview BGP
              //activityHistoryForm.GetInformationTable();
              // MTNControlBase.FindClickRowInTable(activityHistoryForm.tblInformation, @"Terminal^System~Type^External Interface~Status^Sent - Timed Out~User^ADMIN~Interface Name^opsview", ClickType.DoubleClick, SearchType.Exact, 1, 18, 1);
              activityHistoryForm.TblInformation.FindClickRow(["Terminal^System~Type^External Interface~Status^Sent - Timed Out~User^ADMIN~Interface Name^opsview"], ClickType.DoubleClick, SearchType.Exact,  rowInstance:1);

              // Check the message is created as expected for Operator Update
              string[] stringsToFind1 =
              {
                     @"tableName: ref_bizunit_scoped",
                     @"id: AOPS",
                     @"life_cycle_state: ACT",
                     @"name: Opsview Operator updated",
                     @"updateAction: U",
                     @"updateType: OPERATOR"
              };
              Activity_History_Extra_Detail_Form extraDetailsFormUpdate = new Activity_History_Extra_Detail_Form(@"opsview POST testurl.org was sent");
              extraDetailsFormUpdate.CreateFilesToCheckDetails(@"50282_File1", @"50282_File2", stringsToFind1);

            // Check the message is created as expected for Operator Create
            activityHistoryForm.SetFocusToForm();
            // MTNControlBase.FindClickRowInTable(activityHistoryForm.tblInformation, @"Terminal^System~Type^External Interface~Status^Sent - Timed Out~User^ADMIN~Interface Name^opsview", ClickType.DoubleClick, SearchType.Exact, 1, 18, 2);
            activityHistoryForm.TblInformation.FindClickRow(["Terminal^System~Type^External Interface~Status^Sent - Timed Out~User^ADMIN~Interface Name^opsview"], ClickType.DoubleClick, SearchType.Exact, rowInstance: 2);
            string[] stringsToFind2 =
            {
                   @"tableName: ref_bizunit_scoped",
                   @"id: AOPS",
                   @"life_cycle_state: ACT",
                   @"name: Opsview Operator",
                   @"updateAction: C",
                   @"updateType: OPERATOR"
              };
            Activity_History_Extra_Detail_Form extraDetailsFormCreate = new Activity_History_Extra_Detail_Form(@"opsview POST testurl.org was sent");
            extraDetailsFormCreate.CreateFilesToCheckDetails(@"50282_File1", @"50282_File2", stringsToFind2);
        }
    }
}
